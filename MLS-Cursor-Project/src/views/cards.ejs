<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Poppins:wght@500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/styles.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script>
        // Auto-refresh the dashboard every 15 minutes (15 * 60 * 1000 milliseconds)
        setInterval(() => {
            window.location.reload();
        }, 15 * 60 * 1000);

        // Manual refresh function
        function refreshDashboard() {
            const refreshBtn = document.getElementById('refreshBtn');
            refreshBtn.classList.add('loading');
            window.location.reload();
        }

        function changePage(limit) {
            const currentUrl = new URL(window.location.href);
            currentUrl.searchParams.set('limit', limit);
            currentUrl.searchParams.set('page', '1'); // Reset to first page when changing limit
            window.location.href = currentUrl.toString();
        }
    </script>
    <style>
        body {
            padding: 50px;
            font: 14px "Helvetica Neue", Helvetica, Arial, sans-serif;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
        }
        .stats {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 20px;
            margin-bottom: 30px;
        }
        .stat-card {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            text-align: center;
        }
        .agents-list {
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #dee2e6;
        }
        .agent-card {
            background: white;
            padding: 1.5rem;
            margin: 0.75rem 0;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            transition: all 0.2s ease;
        }
        .agent-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        }
        .agent-card h3 {
            margin: 0 0 1rem 0;
            color: #2c3e50;
            font-size: 1.2rem;
            border-bottom: 2px solid #eee;
            padding-bottom: 0.5rem;
        }
        .agent-card p {
            margin: 0.5rem 0;
            color: #34495e;
            line-height: 1.4;
        }
        .agent-card strong {
            color: #2c3e50;
            font-weight: 600;
        }
        .property-info {
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 1px solid #eee;
        }
        .property-price {
            color: #27ae60;
            font-size: 1.1rem;
            font-weight: 600;
        }
        .agent-office {
            color: #7f8c8d;
            font-style: italic;
        }
        .last-updated {
            margin-top: 1rem;
            font-size: 0.9rem;
            color: #95a5a6;
        }
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }
        .refresh-btn {
            padding: 0.5rem 1rem;
            background: #3498db;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background 0.2s;
        }
        .refresh-btn:hover {
            background: #2980b9;
        }
        .search-controls {
            display: flex;
            justify-content: space-between;
            margin-bottom: 2rem;
        }
        .search-box {
            flex: 1;
            margin-right: 1rem;
        }
        .search-box input {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .sort-controls {
            display: flex;
            gap: 0.5rem;
        }
        .sort-controls select {
            padding: 0.5rem;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .pagination {
            margin-top: 2rem;
            text-align: center;
        }
        .pagination a {
            padding: 0.5rem 1rem;
            margin: 0 0.25rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            text-decoration: none;
            color: #3498db;
        }
        .pagination a:hover {
            background: #f8f9fa;
        }
        .page-info {
            margin: 0 1rem;
            color: #7f8c8d;
        }
        .pagination-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 2rem;
            padding: 1rem 0;
        }
        .results-per-page {
            display: flex;
            align-items: center;
        }
        .results-per-page select {
            padding: 0.5rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            margin-left: 0.5rem;
        }
        .controls-container {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 1.5rem 0;
            padding: 1rem 0;
            border-bottom: 1px solid #edf2f7;
            gap: 1rem;
        }
        .filter-controls {
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        .sort-dropdown {
            padding: 0.5rem 2.5rem 0.5rem 1rem;
            border: 1px solid #e2e8f0;
            border-radius: 0.375rem;
            background-color: #fff;
            color: #4a5568;
            font-size: 0.875rem;
            cursor: pointer;
            transition: all 0.2s;
            appearance: none;
            min-width: 160px;
        }
        .sort-dropdown:hover {
            border-color: #cbd5e0;
        }
        .sort-dropdown:focus {
            outline: none;
            border-color: #4299e1;
            box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);
        }
        .filter-label {
            font-size: 0.875rem;
            font-weight: 500;
            color: #4a5568;
        }
        .filter-dropdown {
            position: relative;
        }
        .dropdown-icon {
            position: absolute;
            right: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
            width: 1rem;
            height: 1rem;
            pointer-events: none;
            color: #4a5568;
        }
        .dropdown-menu {
            position: absolute;
            top: 100%;
            left: 0;
            z-index: 1000;
            display: none;
            min-width: 200px;
            padding: 0.5rem 0;
            margin: 0.125rem 0 0;
            background-color: #fff;
            border: 1px solid #e2e8f0;
            border-radius: 0.375rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }
        .dropdown-menu.show {
            display: block;
        }
        .dropdown-search {
            padding: 0.5rem;
            border-bottom: 1px solid #e2e8f0;
        }
        .dropdown-search input {
            width: 100%;
            padding: 0.375rem 0.75rem;
            border: 1px solid #e2e8f0;
            border-radius: 0.25rem;
            font-size: 0.875rem;
        }
        .dropdown-options {
            max-height: 300px;
            overflow-y: auto;
        }
        .dropdown-option {
            display: flex;
            align-items: center;
            padding: 0.375rem 1rem;
            cursor: pointer;
            font-size: 0.875rem;
            color: #4a5568;
        }
        .dropdown-option:hover {
            background-color: #f7fafc;
        }
        .dropdown-option input[type="checkbox"] {
            margin-right: 0.5rem;
        }
        .zip-options {
            border-top: 1px solid #e2e8f0;
            margin-top: 0.5rem;
            padding-top: 0.5rem;
        }
    </style>
</head>
<body>
    <div class="layout-container">
        <%- include('partials/menu') %>

        <div class="main-content" id="mainContent">
            <div class="container">
                <div class="header">
                    <h1>Lubbock MLS</h1>
                    <span class="highlight">Cards View</span>
                </div>

                <div class="controls-container">
                    <span class="filter-label">Filters:</span>
                    <div class="filter-controls">
                        <!-- Date Filter -->
                        <div class="filter-dropdown">
                            <select id="dateFilter" class="sort-dropdown">
                                <option value="all" selected>All Time</option>
                                <option value="24h">Last 24 Hours</option>
                                <option value="5d">Last 5 Days</option>
                                <option value="1w">Last Week</option>
                                <option value="1m">Last Month</option>
                            </select>
                        </div>

                        <!-- Zip Code Filter -->
                        <div class="filter-dropdown">
                            <button id="zipCodeBtn" class="sort-dropdown dropdown-toggle">
                                All Zip Codes
                            </button>
                            <div class="dropdown-menu" id="zipCodeMenu">
                                <div class="dropdown-search">
                                    <input type="text" placeholder="Search zip codes..." id="zipSearch">
                                </div>
                                <div class="dropdown-options">
                                    <label class="dropdown-option">
                                        <input type="checkbox" value="all" checked> All Zip Codes
                                    </label>
                                    <div class="zip-options" id="zipOptions">
                                        <!-- Zip codes will be populated dynamically -->
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Price Filter -->
                        <div class="filter-dropdown">
                            <select id="priceFilter" class="sort-dropdown">
                                <option value="all" selected>All Prices</option>
                                <option value="0-200000">$0 - $200,000</option>
                                <option value="200000-500000">$200,000 - $500,000</option>
                                <option value="500000+">$500,000+</option>
                            </select>
                        </div>
                    </div>
                </div>

                <div class="agent-cards">
                    <% agents.forEach(agent => { %>
                        <div class="agent-card">
                            <div class="agent-card-header">
                                <h3><%= agent.firstName %> <%= agent.lastName %></h3>
                                <p class="mls-id">MLS ID: <%= agent.mlsId %></p>
                            </div>

                            <div class="agent-card-body">
                                <% if (agent.email || agent.phone) { %>
                                    <div class="contact-info">
                                        <% if (agent.email) { %>
                                            <p><strong>Email:</strong> <a href="mailto:<%= agent.email %>" class="contact-link"><%= agent.email %></a></p>
                                        <% } %>
                                        <% if (agent.phone) { %>
                                            <p><strong>Phone:</strong> <a href="tel:<%= agent.phone %>" class="contact-link"><%= agent.phone %></a></p>
                                        <% } %>
                                    </div>
                                <% } %>

                                <p class="agent-office"><strong>Office:</strong> <%= agent.officeName %></p>

                                <% if (agent.listings && agent.listings.length > 0) { %>
                                    <% agent.listings.forEach(listing => { %>
                                        <div class="property-info">
                                            <% if (listing.mlsNumber) { %>
                                                <p><strong>MLS#:</strong> <%= listing.mlsNumber %></p>
                                            <% } %>

                                            <% if (listing.address) { %>
                                                <p><strong>Address:</strong> 
                                                    <%= listing.address.street %>, 
                                                    <%= listing.address.city %>, 
                                                    <%= listing.address.state %> 
                                                    <%= listing.address.zip %>
                                                </p>
                                            <% } %>

                                            <p class="property-price">
                                                <strong>List Price:</strong> $<%= listing.listPrice?.toLocaleString() || 'N/A' %>
                                            </p>

                                            <% if (listing.closePrice) { %>
                                                <p class="property-price">
                                                    <strong>Close Price:</strong> $<%= listing.closePrice.toLocaleString() %>
                                                </p>
                                            <% } %>

                                            <div class="property-details">
                                                <% if (listing.propertyType) { %>
                                                    <p><strong>Type:</strong> <%= listing.propertyType %></p>
                                                <% } %>

                                                <p>
                                                    <% if (listing.bedrooms) { %>
                                                        <strong>Beds:</strong> <%= listing.bedrooms %>
                                                    <% } %>
                                                    <% if (listing.bathrooms) { %>
                                                        <strong>Baths:</strong> <%= listing.bathrooms %>
                                                    <% } %>
                                                    <% if (listing.squareFootage) { %>
                                                        <strong>SqFt:</strong> <%= listing.squareFootage.toLocaleString() %>
                                                    <% } %>
                                                </p>

                                                <% if (listing.yearBuilt) { %>
                                                    <p><strong>Year Built:</strong> <%= listing.yearBuilt %></p>
                                                <% } %>

                                                <% if (listing.lotSize) { %>
                                                    <p><strong>Lot Size:</strong> <%= listing.lotSize %></p>
                                                <% } %>

                                                <% if (listing.garageSpaces) { %>
                                                    <p><strong>Garage:</strong> <%= listing.garageSpaces %> spaces</p>
                                                <% } %>

                                                <% if (listing.pool) { %>
                                                    <p><strong>Pool:</strong> Yes</p>
                                                <% } %>

                                                <% if (listing.propertyStyle) { %>
                                                    <p><strong>Style:</strong> <%= listing.propertyStyle %></p>
                                                <% } %>

                                                <% if (listing.daysOnMarket) { %>
                                                    <p><strong>Days on Market:</strong> <%= listing.daysOnMarket %></p>
                                                <% } %>
                                            </div>
                                        </div>
                                    <% }); %>
                                <% } %>

                                <p class="last-updated">
                                    <strong>Last Sync:</strong> 
                                    <%= DateService.formatDateTime(agent.lastSync) || 'Never' %>
                                </p>
                            </div>
                        </div>
                    <% }); %>
                </div>

                <div class="pagination-container">
                    <div class="results-per-page">
                        <select class="sort-dropdown" id="limit" name="limit" onchange="changePage(this.value)">
                            <option value="12" <%= locals.limit == 12 ? 'selected' : '' %>>12 per page</option>
                            <option value="24" <%= locals.limit == 24 ? 'selected' : '' %>>24 per page</option>
                            <option value="60" <%= locals.limit == 60 ? 'selected' : '' %>>60 per page</option>
                        </select>
                    </div>

                    <div class="pagination">
                        <% if (pagination.hasPrev) { %>
                            <a href="?page=<%= pagination.currentPage - 1 %>&dateFilter=<%= dateFilter || 'all' %>&priceFilter=<%= priceFilter || 'all' %>&zipCodes=<%= zipCodes || '' %>&limit=<%= locals.limit %>&sortField=lastSync">&laquo; Previous</a>
                        <% } %>

                        <span class="page-info">
                            Page <%= pagination.currentPage %> of <%= pagination.pages %>
                            (Showing <%= Math.min(((pagination.currentPage - 1) * limit) + 1, pagination.total) %> - 
                            <%= Math.min(pagination.currentPage * limit, pagination.total) %> 
                            of <%= pagination.total || 0 %> total)
                        </span>

                        <% if (pagination.hasNext) { %>
                            <a href="?page=<%= pagination.currentPage + 1 %>&dateFilter=<%= dateFilter || 'all' %>&priceFilter=<%= priceFilter || 'all' %>&zipCodes=<%= zipCodes || '' %>&limit=<%= locals.limit %>&sortField=lastSync">Next &raquo;</a>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        console.log('DOM loaded, initializing filters...');

        // Initialize filters
        const dateFilter = document.getElementById('dateFilter');
        const priceFilter = document.getElementById('priceFilter');
        const zipCodeBtn = document.getElementById('zipCodeBtn');

        if (dateFilter && priceFilter) {
            console.log('Found filter elements, attaching listeners...');

            // Add change event listeners to filters
            dateFilter.addEventListener('change', applyFilters);
            priceFilter.addEventListener('change', applyFilters);

            // Initial zip codes fetch
            fetchZipCodes();
        } else {
            console.error('Filter elements not found:', {
                dateFilter: !!dateFilter,
                priceFilter: !!priceFilter
            });
        }

        // Toggle zip code dropdown
        if (zipCodeBtn) {
            zipCodeBtn.addEventListener('click', function() {
                document.getElementById('zipCodeMenu').classList.toggle('show');
            });
        }

        // Close dropdown when clicking outside
        document.addEventListener('click', function(e) {
            if (!e.target.closest('.filter-dropdown')) {
                document.querySelectorAll('.dropdown-menu').forEach(menu => {
                    menu.classList.remove('show');
                });
            }
        });

        // Filter zip codes as user types
        const zipSearch = document.getElementById('zipSearch');
        if (zipSearch) {
            zipSearch.addEventListener('input', function(e) {
                const searchText = e.target.value.toLowerCase();
                document.querySelectorAll('.zip-options .dropdown-option').forEach(option => {
                    const zipText = option.textContent.toLowerCase();
                    option.style.display = zipText.includes(searchText) ? '' : 'none';
                });
            });
        }
    });

    async function fetchZipCodes() {
        try {
            const response = await fetch('/api/zip-codes');
            const zipCodes = await response.json();
            populateZipCodes(zipCodes);
        } catch (error) {
            console.error('Error fetching zip codes:', error);
        }
    }

    function populateZipCodes(zipCodes) {
        const zipOptionsContainer = document.getElementById('zipOptions');
        if (!zipOptionsContainer) {
            console.error('Zip options container not found');
            return;
        }

        zipOptionsContainer.innerHTML = '';

        zipCodes.forEach(({zip, count}) => {
            const option = document.createElement('label');
            option.className = 'dropdown-option';
            option.innerHTML = `
                <input type="checkbox" value="${zip}">
                ${zip} (${count})
            `;
            zipOptionsContainer.appendChild(option);
        });
    }

    async function applyFilters() {
        console.log('Applying filters...');
        const cardsContainer = document.querySelector('.agent-cards');
        if (!cardsContainer) {
            console.error('Could not find .agent-cards container');
            return;
        }
        cardsContainer.style.opacity = '0.5';  // Show loading state

        const dateFilter = document.getElementById('dateFilter').value;
        const priceFilter = document.getElementById('priceFilter').value;
        const selectedZips = Array.from(document.querySelectorAll('.zip-options input[type="checkbox"]:checked'))
            .map(cb => cb.value);
        const limit = document.getElementById('limit')?.value || 12;

        try {
            const url = `/api/cards-data?dateFilter=${dateFilter}&priceFilter=${priceFilter}&zipCodes=${selectedZips.join(',')}&limit=${limit}&page=1&sortField=lastSync`;
            console.log('Fetching from:', url);

            const response = await fetch(url);
            const data = await response.json();

            console.log('Received data:', data);

            // Update cards
            cardsContainer.innerHTML = data.cards;

            // Update pagination
            const paginationContainer = document.querySelector('.pagination-container');
            if (paginationContainer) {
                paginationContainer.innerHTML = data.pagination;
            } else {
                console.error('Could not find pagination container');
            }

            // Update URL without refreshing
            const newUrl = new URL(window.location.href);
            newUrl.searchParams.set('dateFilter', dateFilter);
            newUrl.searchParams.set('priceFilter', priceFilter);
            newUrl.searchParams.set('zipCodes', selectedZips.join(','));
            window.history.pushState({}, '', newUrl);

        } catch (error) {
            console.error('Error applying filters:', error);
        } finally {
            cardsContainer.style.opacity = '1';
        }
    }

    // Add listener for zip code checkboxes
    document.addEventListener('change', function(e) {
        if (e.target.closest('.zip-options')) {
            console.log('Zip code selection changed');
            applyFilters();
        }
    });
    </script>
</body>
</html> 